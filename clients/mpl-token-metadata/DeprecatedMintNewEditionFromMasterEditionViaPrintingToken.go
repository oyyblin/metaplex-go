// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package mpl_token_metadata

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// DeprecatedMintNewEditionFromMasterEditionViaPrintingToken is the `DeprecatedMintNewEditionFromMasterEditionViaPrintingToken` instruction.
type DeprecatedMintNewEditionFromMasterEditionViaPrintingToken struct {

	// [0] = [WRITE] metadata
	//
	// [1] = [WRITE] edition
	//
	// [2] = [WRITE] masterEdition
	//
	// [3] = [WRITE] mint
	//
	// [4] = [SIGNER] mintAuthority
	//
	// [5] = [WRITE] printingMint
	//
	// [6] = [WRITE] masterTokenAccount
	//
	// [7] = [WRITE] editionMarker
	//
	// [8] = [SIGNER] burnAuthority
	//
	// [9] = [SIGNER] payer
	//
	// [10] = [] masterUpdateAuthority
	//
	// [11] = [] masterMetadata
	//
	// [12] = [] tokenProgram
	//
	// [13] = [] systemProgram
	//
	// [14] = [] rent
	//
	// [15] = [WRITE] reservationList
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewDeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionBuilder creates a new `DeprecatedMintNewEditionFromMasterEditionViaPrintingToken` instruction builder.
func NewDeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionBuilder() *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	nd := &DeprecatedMintNewEditionFromMasterEditionViaPrintingToken{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 16),
	}
	return nd
}

// SetMetadataAccount sets the "metadata" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetMetadataAccount(metadata ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(metadata).WRITE()
	return inst
}

// GetMetadataAccount gets the "metadata" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetMetadataAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetEditionAccount sets the "edition" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetEditionAccount(edition ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(edition).WRITE()
	return inst
}

// GetEditionAccount gets the "edition" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetEditionAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetMasterEditionAccount sets the "masterEdition" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetMasterEditionAccount(masterEdition ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(masterEdition).WRITE()
	return inst
}

// GetMasterEditionAccount gets the "masterEdition" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetMasterEditionAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetMintAccount sets the "mint" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetMintAccount(mint ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(mint).WRITE()
	return inst
}

// GetMintAccount gets the "mint" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetMintAuthorityAccount sets the "mintAuthority" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetMintAuthorityAccount(mintAuthority ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(mintAuthority).SIGNER()
	return inst
}

// GetMintAuthorityAccount gets the "mintAuthority" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetMintAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetPrintingMintAccount sets the "printingMint" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetPrintingMintAccount(printingMint ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(printingMint).WRITE()
	return inst
}

// GetPrintingMintAccount gets the "printingMint" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetPrintingMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetMasterTokenAccountAccount sets the "masterTokenAccount" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetMasterTokenAccountAccount(masterTokenAccount ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(masterTokenAccount).WRITE()
	return inst
}

// GetMasterTokenAccountAccount gets the "masterTokenAccount" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetMasterTokenAccountAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetEditionMarkerAccount sets the "editionMarker" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetEditionMarkerAccount(editionMarker ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(editionMarker).WRITE()
	return inst
}

// GetEditionMarkerAccount gets the "editionMarker" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetEditionMarkerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetBurnAuthorityAccount sets the "burnAuthority" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetBurnAuthorityAccount(burnAuthority ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(burnAuthority).SIGNER()
	return inst
}

// GetBurnAuthorityAccount gets the "burnAuthority" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetBurnAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetPayerAccount sets the "payer" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetPayerAccount(payer ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(payer).SIGNER()
	return inst
}

// GetPayerAccount gets the "payer" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetPayerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

// SetMasterUpdateAuthorityAccount sets the "masterUpdateAuthority" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetMasterUpdateAuthorityAccount(masterUpdateAuthority ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[10] = ag_solanago.Meta(masterUpdateAuthority)
	return inst
}

// GetMasterUpdateAuthorityAccount gets the "masterUpdateAuthority" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetMasterUpdateAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(10)
}

// SetMasterMetadataAccount sets the "masterMetadata" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetMasterMetadataAccount(masterMetadata ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[11] = ag_solanago.Meta(masterMetadata)
	return inst
}

// GetMasterMetadataAccount gets the "masterMetadata" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetMasterMetadataAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(11)
}

// SetTokenProgramAccount sets the "tokenProgram" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetTokenProgramAccount(tokenProgram ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[12] = ag_solanago.Meta(tokenProgram)
	return inst
}

// GetTokenProgramAccount gets the "tokenProgram" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(12)
}

// SetSystemProgramAccount sets the "systemProgram" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[13] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "systemProgram" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(13)
}

// SetRentAccount sets the "rent" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetRentAccount(rent ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[14] = ag_solanago.Meta(rent)
	return inst
}

// GetRentAccount gets the "rent" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetRentAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(14)
}

// SetReservationListAccount sets the "reservationList" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) SetReservationListAccount(reservationList ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	inst.AccountMetaSlice[15] = ag_solanago.Meta(reservationList).WRITE()
	return inst
}

// GetReservationListAccount gets the "reservationList" account.
func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) GetReservationListAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(15)
}

func (inst DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_DeprecatedMintNewEditionFromMasterEditionViaPrintingToken,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) Validate() error {
	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Metadata is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.Edition is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.MasterEdition is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.Mint is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.MintAuthority is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.PrintingMint is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.MasterTokenAccount is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.EditionMarker is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.BurnAuthority is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.Payer is not set")
		}
		if inst.AccountMetaSlice[10] == nil {
			return errors.New("accounts.MasterUpdateAuthority is not set")
		}
		if inst.AccountMetaSlice[11] == nil {
			return errors.New("accounts.MasterMetadata is not set")
		}
		if inst.AccountMetaSlice[12] == nil {
			return errors.New("accounts.TokenProgram is not set")
		}
		if inst.AccountMetaSlice[13] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
		if inst.AccountMetaSlice[14] == nil {
			return errors.New("accounts.Rent is not set")
		}
		if inst.AccountMetaSlice[15] == nil {
			return errors.New("accounts.ReservationList is not set")
		}
	}
	return nil
}

func (inst *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("DeprecatedMintNewEditionFromMasterEditionViaPrintingToken")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=16]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("             metadata", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("              edition", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("        masterEdition", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("                 mint", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("        mintAuthority", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("         printingMint", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("          masterToken", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("        editionMarker", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("        burnAuthority", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("                payer", inst.AccountMetaSlice.Get(9)))
						accountsBranch.Child(ag_format.Meta("masterUpdateAuthority", inst.AccountMetaSlice.Get(10)))
						accountsBranch.Child(ag_format.Meta("       masterMetadata", inst.AccountMetaSlice.Get(11)))
						accountsBranch.Child(ag_format.Meta("         tokenProgram", inst.AccountMetaSlice.Get(12)))
						accountsBranch.Child(ag_format.Meta("        systemProgram", inst.AccountMetaSlice.Get(13)))
						accountsBranch.Child(ag_format.Meta("                 rent", inst.AccountMetaSlice.Get(14)))
						accountsBranch.Child(ag_format.Meta("      reservationList", inst.AccountMetaSlice.Get(15)))
					})
				})
		})
}

func (obj DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewDeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstruction declares a new DeprecatedMintNewEditionFromMasterEditionViaPrintingToken instruction with the provided parameters and accounts.
func NewDeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstruction(
	// Accounts:
	metadata ag_solanago.PublicKey,
	edition ag_solanago.PublicKey,
	masterEdition ag_solanago.PublicKey,
	mint ag_solanago.PublicKey,
	mintAuthority ag_solanago.PublicKey,
	printingMint ag_solanago.PublicKey,
	masterTokenAccount ag_solanago.PublicKey,
	editionMarker ag_solanago.PublicKey,
	burnAuthority ag_solanago.PublicKey,
	payer ag_solanago.PublicKey,
	masterUpdateAuthority ag_solanago.PublicKey,
	masterMetadata ag_solanago.PublicKey,
	tokenProgram ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey,
	rent ag_solanago.PublicKey,
	reservationList ag_solanago.PublicKey) *DeprecatedMintNewEditionFromMasterEditionViaPrintingToken {
	return NewDeprecatedMintNewEditionFromMasterEditionViaPrintingTokenInstructionBuilder().
		SetMetadataAccount(metadata).
		SetEditionAccount(edition).
		SetMasterEditionAccount(masterEdition).
		SetMintAccount(mint).
		SetMintAuthorityAccount(mintAuthority).
		SetPrintingMintAccount(printingMint).
		SetMasterTokenAccountAccount(masterTokenAccount).
		SetEditionMarkerAccount(editionMarker).
		SetBurnAuthorityAccount(burnAuthority).
		SetPayerAccount(payer).
		SetMasterUpdateAuthorityAccount(masterUpdateAuthority).
		SetMasterMetadataAccount(masterMetadata).
		SetTokenProgramAccount(tokenProgram).
		SetSystemProgramAccount(systemProgram).
		SetRentAccount(rent).
		SetReservationListAccount(reservationList)
}
